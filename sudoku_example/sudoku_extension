%Numerical representation of an atom 
assignment(X,Y):- output(X,Q), literal_tuple(Q,Y).

%Numertical representation of the atom to be explained
why_assignment(X,D,T):- why(X,T),answer(X),assignment(X,D).


%Pick any rule type
any_rule(V,P):- 1{rule(disjunction(V),normal(P)); rule(choice(V),normal(P)); rule(choice(V),sum(P)); rule(disjunction(V),sum(P)) }1,
atom_tuple(V), literal_tuple(P).
any_choice_rule(V,P):- 1{rule(choice(V),normal(P)); rule(choice(V),sum(P,_,_))}1, atom_tuple(V), literal_tuple(P).
any_disjunction_rule(V,P):- 1{rule(disjunction(V),normal(P)); rule(disjunction(V),sum(P)) }1, atom_tuple(V), literal_tuple(P).




val(1..9).

why_not(sudoku(A,B,D),0):- why(sudoku(A,B,C)), val(D), C!=D.

:-why_not(X,_), not reason(X,_,_,_,_).
:- why(X,_), not reason(X,_,_,_,_).


output(Y):- reason(_,Y,_,_,_).

output_fact(X):- output(X), output(X,Y), literal_tuple(Y,Z), external(Z,false).
tots(N):- N= #count{ Q: output_fact(Q)}.
#maximize{N: tots(N)}.



#show output/1.
#show tots/1.
